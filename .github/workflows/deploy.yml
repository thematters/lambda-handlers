name: Deployment

on:
  push:
    branches-ignore:
      - develop
      - main
      - master
      - stage
  pull_request:
    branches:
      - master
      - develop
      - stage
    types:
      - closed

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

jobs:
  build_and_deploy:
    # if: github.event.pull_request.merged == true

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@master

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Cache Dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci

      - name: Lint
        run: |
          npm run lint \
          && npm run format:check

      - name: Setup AWS
        if: github.base_ref == 'develop' || github.base_ref == 'stage' || github.base_ref == 'master'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        if: github.base_ref == 'develop' || github.base_ref == 'stage' || github.base_ref == 'master'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      # === [END] predeploy ===

      - name: Build, tag, and push image to Amazon ECR (develop)
        if: github.base_ref == 'develop'
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: lambda-handlers-image
          IMAGE_TAG: develop

